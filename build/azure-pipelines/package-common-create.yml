parameters:
- name: OS
  type: string
  default:
- name: Type
  type: string

steps:
- task: DownloadPipelineArtifact@2
  inputs:
    source: 'specific'
    project: 'ae14e11c-7eb2-46af-b588-471e6116d635'
    pipeline: 500
    runVersion: 'latest'
    targetPath: '$(Pipeline.Workspace)'      
- task: PowerShell@2
  displayName: Set last tag to variable
  inputs:
    targetType: 'inline'
    script: |
      $VERSION_TAG = git describe --tags (git rev-list --tags --max-count=1)
      $VERSION_TAG = $VERSION_TAG.substring(1) # Trim initial 'v'
      Write-Host("##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG")
      Write-Host($VERSION_TAG)
- task: CmdLine@2
  condition: ne(variables.OS, 'windows')
  displayName: 'Build ${{ parameters.OS }}/${{ parameters.Type }} distribution'
  inputs:
    script: release/${{ parameters.OS }}/${{ parameters.Type }}/pipeline.sh
    workingDirectory: $(Build.SourcesCliDirectory)
  env:
    CLI_VERSION: $(VERSION_TAG)
    BUILD_OUTPUT: $(Pipeline.Workspace)
    BUILD_STAGINGDIRECTORY: $(Build.ArtifactStagingDirectory)
- task: VSBuild@1
  condition: eq(variables.OS, 'windows')
  displayName: 'Build Windows MSI distribution'
  inputs:
    solution: '$(Build.SourcesCliDirectory)\release\windows\msi\sqlcmd.wixproj'
    msbuildArchitecture: 'x86'
    msbuildArgs: '/p:Configuration=Release'
  env:
    CLI_VERSION: $(VERSION_TAG)
- task: EsrpCodeSigning@2
  condition: eq(variables.OS, 'windows')
  inputs:
    ConnectedServiceName: 'Code Signing'
    FolderPath: '$(Build.SourcesDirectory)/release/windows/msi/bin/Release'
    Pattern: '*.msi'
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
        {
          "keyCode": "CP-230012",
          "operationSetCode": "SigntoolSign",
          "parameters": [
            {
              "parameterName": "OpusName",
              "parameterValue": "Sqlcmd Tools"
            },
            {
              "parameterName": "OpusInfo",
              "parameterValue": "https://github.com/microsoft/go-sqlcmd"
            },
            {
              "parameterName": "PageHash",
              "parameterValue": "/NPH"
            },
            {
              "parameterName": "FileDigest",
              "parameterValue": "/fd sha256"
            },
            {
              "parameterName": "TimeStamp",
              "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
            }
          ],
          "toolName": "signtool.exe",
          "toolVersion": "6.2.9304.0"
        },
        {
          "keyCode": "CP-230012",
          "operationSetCode": "SigntoolVerify",
          "parameters": [
            {
              "parameterName": "VerifyAll",
              "parameterValue": "/all"
            }
          ],
          "toolName": "signtool.exe",
          "toolVersion": "6.2.9304.0"
        }
      ]
    SessionTimeout: '600'
    MaxConcurrency: '50'
    MaxRetryAttempts: '20'
- task: Bash@3
  condition: eq(variables.OS, 'windows')
  displayName: 'Rename MSI'
  inputs:
   targetType: 'inline'
   script: |
      mv "$(Build.SourcesDirectory)/release/windows/msi/bin/Release/sqlcmd.msi" "$(Build.SourcesDirectory)/release/windows/msi/bin/Release/sqlcmd_${CLI_VERSION}-${CLI_VERSION_REVISION}.msi"
  env:
    CLI_VERSION: $(VERSION_TAG)
    CLI_VERSION_REVISION: 1
- task: CopyFiles@2
  condition: eq(variables.OS, 'windows')
  displayName: 'Copy MSI to: $(Build.ArtifactStagingDirectory)'
  inputs:
    sourceFolder: $(Build.SourcesDirectory)/release/windows/msi/bin/Release
    contents: '?(*.msi|*.md)'
    TargetFolder: $(Build.ArtifactStagingDirectory)
- task: EsrpCodeSigning@2
  condition: and(eq(variables.OS, 'linux'), ne(variables.Type, 'docker'))
  inputs:
    ConnectedServiceName: 'Code Signing'
    FolderPath: $(Build.ArtifactStagingDirectory)
    Pattern: '*.${{ parameters.Type }}'
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
        {
          "KeyCode" : "CP-450779-Pgp",
          "OperationCode" : "LinuxSign",
          "Parameters" : {},
          "ToolName" : "sign",
          "ToolVersion" : "1.0"
        }
      ]
    SessionTimeout: '600'
    MaxConcurrency: '50'
    MaxRetryAttempts: '20'
- task: PublishPipelineArtifact@0
  displayName: 'Publish Artifact: ${{ parameters.Type }}'
  inputs:
    targetPath: $(Build.ArtifactStagingDirectory)
    artifactName: ${{ parameters.Type }}
