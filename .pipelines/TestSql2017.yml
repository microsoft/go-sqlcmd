variables:
  PASSWORD: $(SQLPASSWORD)
pool:
   vmImage: 'ubuntu-latest'

steps:
  - template: include-install-go-tools.yml

  - task: Docker@2
    displayName: 'Run SQL 2022 docker image'
    inputs:
      command: run
      arguments: '-m 2GB -e ACCEPT_EULA=1 -d --name sql2022 -p:1433:1433 -e SA_PASSWORD=$(PASSWORD) mcr.microsoft.com/mssql/server:2022-latest'

  - template: include-runtests-linux.yml
    parameters:
      RunName: 'SQL2022'
      SQLCMDUSER: sa
      SQLPASSWORD: $(PASSWORD)

  - task: AzureCLI@2
    inputs:
      addSpnToEnvironment: true
      azureSubscription: $(AZURESUBSCRIPTION_SERVICE_CONNECTION_NAME)
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Write-Host "##vso[task.setvariable variable=AZURESUBSCRIPTION_CLIENT_ID;]$env:AZURESUBSCRIPTION_CLIENT_ID"
        Write-Host "##vso[task.setvariable variable=AZURESUBSCRIPTION_TENANT_ID;]$env:AZURESUBSCRIPTION_TENANT_ID"
        gci env:* | sort-object name

  - template: include-runtests-linux.yml
    parameters:
      RunName: 'SQLDB'
      # AZURESERVER must be defined as a variable in the pipeline
      SQLCMDSERVER: $(AZURESERVER)
  - task: UseDotNet@2
    inputs:
      packageType: 'runtime'
      version: '8.x'

  - task: PublishCodeCoverageResults@2
    inputs:
      pathToSources: '$(Build.SourcesDirectory)'
      summaryFileLocation: $(Build.SourcesDirectory)/**/coverage.xml
      failIfCoverageEmpty: true
    condition: always()
    continueOnError: true
  
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: ‘Component Detection’
